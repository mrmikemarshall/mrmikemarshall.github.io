<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Journey to the Cloud and Beyond</title>
    <link>https://mrmikemarshall.github.io/</link>
    <description>Recent content on Journey to the Cloud and Beyond</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://mrmikemarshall.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How deploying AWS Lambda with Terraform is a Win-Win</title>
      <link>https://mrmikemarshall.github.io/article/lambda-log-groups-post/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mrmikemarshall.github.io/article/lambda-log-groups-post/</guid>
      <description>In this blog post I will demonstrate how selecting the best tool for the job in the end can pay off resulting in both reduced complexity and lower costs.
I was recently tasked with exporting CloudWatch logs from multiple AWS accounts into Grafana Loki, hosted in a central logging AWS account. My architecture leverages the event driven design pattern of subscribing a log sender Lambda function to a set of CloudWatch log groups.</description>
    </item>
    
    <item>
      <title>Terraform Learnings</title>
      <link>https://mrmikemarshall.github.io/article/post-2020-10-08/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mrmikemarshall.github.io/article/post-2020-10-08/</guid>
      <description>A key feature of using Terraform is idempotency of Infrastructure as Code.
Use of depends_on pointed at a data source can result resources being redeployed. Today I solved a problem where this principal was a bit less intuitive, had the same effect. The module I was using leveraged a null_resource to execute a local command when a config file changed. The triggers block referenced a external data source to calculate the md5 checksum of the config file.</description>
    </item>
    
    <item>
      <title>Managing the world through a keyhole</title>
      <link>https://mrmikemarshall.github.io/article/post-2020-09-25/</link>
      <pubDate>Fri, 25 Sep 2020 02:42:42 +0000</pubDate>
      
      <guid>https://mrmikemarshall.github.io/article/post-2020-09-25/</guid>
      <description>There are a few AWS services which seem to fall into the category of managing the world through a keyhole. I like to say, if I can see it, I can troubleshoot it. One example is AWS Fargate, a powerful container orchestration option of ECS (Amazon Elastic Container Service). With Fargate, you quickly realize that you have no console, no way to see what is going on realtime, basically running blind.</description>
    </item>
    
    <item>
      <title>CICD Blog Post</title>
      <link>https://mrmikemarshall.github.io/article/cicd-blog-post/</link>
      <pubDate>Thu, 24 Sep 2020 03:31:42 +0000</pubDate>
      
      <guid>https://mrmikemarshall.github.io/article/cicd-blog-post/</guid>
      <description>This content is being deployed on repo push!
And hereâ€™s my AWS architecture: </description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://mrmikemarshall.github.io/article/my-first-post/</link>
      <pubDate>Tue, 22 Sep 2020 21:28:00 +0000</pubDate>
      
      <guid>https://mrmikemarshall.github.io/article/my-first-post/</guid>
      <description>Launching my blog!
AWS codebuild automatic updates.</description>
    </item>
    
  </channel>
</rss>
